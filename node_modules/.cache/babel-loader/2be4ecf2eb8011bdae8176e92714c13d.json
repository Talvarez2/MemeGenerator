{"ast":null,"code":"var _jsxFileName = \"/home/tomas/learning/react/memegenerator/src/components/MemeGenerator/index.js\";\nimport React, { Component } from \"react\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"meme-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"topText\",\n      value: this.state.topText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"GEN\")));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/home/tomas/learning/react/memegenerator/src/components/MemeGenerator/index.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAqC;AACjCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,+BAHF;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAM;AAACE,QAAAA;AAAD,UAAUF,QAAQ,CAACG,IAAzB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEQ;AAAf,OAAd;AACH,KALL;AAMH;;AAEDP,EAAAA,YAAY,CAACU,KAAD,EAAO;AACf,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKJ,QAAL,CAAc;AAAE,OAACE,IAAD,GAAQC;AAAV,KAAd;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,WAAW,EAAC,SAHhB;AAII,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,OAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKI,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,CADJ,CADJ;AAeH;;AA1CgC;;AA6CrC,eAAeP,aAAf","sourcesContent":["import React, {Component} from \"react\";\n\nclass MemeGenerator extends Component{\n    constructor() {\n        super()\n        this.state = {\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                this.setState({ allMemeImgs: memes })\n            })\n    }\n\n    handleChange(event){\n        const {name, value} = event.target\n        this.setState({ [name]: value})\n    }\n\n    render(){\n        return (\n            <div>\n                <form className=\"meme-form\">\n                    <input\n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"topText\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    />\n\n                    <button>GEN</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}